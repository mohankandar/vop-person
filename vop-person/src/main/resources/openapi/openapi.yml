# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md
openapi: 3.0.1
info:
   version: 0.0.1-SNAPSHOT
   title: VOP Person Service v1 API Documentation
   description: An OpenAPI 3.0 specification for Person Service. Documentation is generated using OpenAPI Specification version 3.0.
   license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: Person
    description: Person Resource
  - name: token-resource
    description: Token Resource
security:
  - bearerAuth: []
paths:
  "/api/v1/person/pid":
    post:
      tags:
      - Person
      summary: Retrieve Person information by Participant ID (PID) from mocked partner sample service.
      description: Will return a sample info object based on search by PID.
      operationId: sampleByPid
      requestBody:
        description: sampleRequest
        required: true
        content:
            application/json:
              schema:
                '$ref': '#/components/schemas/SampleRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/SampleResponse'
        '400':
           '$ref': '#/components/responses/400'
        '401':
           '$ref': '#/components/responses/401'
        '403':
           '$ref': '#/components/responses/403'
        '500':
           '$ref': '#/components/responses/500'
      security:
        - bearerAuth: []
      deprecated: false
  # The token path should not require any changes
components:
  # securitySchemes are defined by the framework.
  # Service applications must configure as below.
  securitySchemes:
    bearerAuth:
      type: http
      bearerFormat: JWT
      scheme: bearer
  schemas:
    # Define API (provider) model objects. Use type, format and example;
    # use standard JSR303 constraints (required, min, max, etc) where it makes sense
    SampleInfo:
      type: object
      title: SampleInfo
      description: Model for sample data contained in the response from the Service
      properties:
        name:
          type: string
          example: JANE M DOE
          description: The persons first name, middle initial, and last name
        participantId:
          type: integer
          format: int64
          example: 6666345
          minimum: 1
          description: The persons participant ID
    SampleRequest:
      title: SampleRequest
      description: Model for data to request sample information from the Service
      allOf:
        - '$ref': '#/components/schemas/ProviderRequest'
        - type: object
          properties:
            participantID:
              type: integer
              format: int64
              example: 6666345
              description: The Participant ID of the person for whom to retrieve sample data
              minimum: 1
              exclusiveMinimum: false
          required:
            - participantID
    SampleResponse:
      title: SampleResponse
      description: Model for the sample response from the Service
      allOf:
       - '$ref': '#/components/schemas/ProviderResponse'
       - type: object
         # all other properties specific to SampleResponse
         properties:
            sampleInfo:
              description: The object representing the sample information
              '$ref': '#/components/schemas/SampleInfo'
    # Schema objects below are from VOP Framework to be declared.
    # These objects need to be mapped in <importMappings> section
    # of openapi-generator-maven-plugin so that no code is generated
    # for these classes
    Message:
      type: object
      title: Message
      description: Model that identifies a single message added to the repsonse. Property keys are enumerated in  the MessageKeys object.
      required:
      - key
      - severity
      properties:
        key:
          # possible values enumerated by com.wynd.vop.framework.messages.MessageKeys
          type: string
        severity:
          # derived from com.wynd.vop.framework.messages.MessageSeverity
          type: string
          enum:
            - INFO
            - WARN
            - ERROR
        status:
          type: integer
          format: int32
        text:
          type: string
        timestamp:
          type: string
          format: date-time
          example: yyyy-MM-dd'T'HH:mm:ss.SSS
    Person:
      type: object
      title: Person
      description: Model that identifies a single individual used in the security context
      properties:
        applicationID:
          type: string
          example: ShareUI
          description: The application taking the last action on the record
        appToken:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
          description: The application's custom token passed as any String from consumers to the API services
        assuranceLevel:
          type: integer
          format: int32
          example: 2
          minimum: 0
          description: The person's access assurance level
        birthDate:
          type: string
          format: date
          example: '1978-05-20'
          description: The person's birth date
        correlationIds:
          type: array
          example:
          - 77779102^NI^200M^USVHA^P
          - 912444689^PI^200BRLS^USVBA^A
          - 6666345^PI^200CORP^USVBA^A
          - 1105051936^NI^200DOD^USDOD^A
          - 912444689^SS
          description: The MVI correlation IDs list for the person
          items:
            type: string
        email:
          type: string
          example: jane.doe@wyn.com
          description: The person's email address
        firstName:
          type: string
          example: JANE
          description: The person's first name
        gender:
          type: string
          example: FEMALE
          description: The person's gender
        lastName:
          type: string
          example: DOE
          description: The person's last name
        middleName:
          type: string
          example: M
          description: The person's middle name
        prefix:
          type: string
          example: Ms
          description: The prefix for the person's full name
        stationID:
          type: string
          example: 310
          description: The number representing the Regional Office of the person taking the last action on the record
        suffix:
          type: string
          example: S
          description: The suffix for the person's full name
        userID:
          type: string
          example: vhaislXXXXX
          description: The name associated with the person taking the last action on the record
    ProviderResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            '$ref': '#/components/schemas/Message'
      title: ProviderResponse
    ProviderRequest:
      type: object
      title: ProviderRequest
  responses:
    400:
      description: There was an error encountered processing the Request.  Response
        will contain a  "messages" element that will provide further information
        on the error.  This request shouldn't be retried until corrected.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: vop.framework.global.validator.method.argument.not.valid
                  severity: ERROR
                  status: 400
                  text: Argument not valid.
                  timestamp: 2019-08-29T18:40:22.766Z
    401:
      description: The authentication mechanism failed and hence access is forbidden.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: UNAUTHORIZED
                  severity: ERROR
                  status: 401
                  text: No JWT Token in Header.
                  timestamp: 2019-08-29T18:40:22.766Z
    403:
      description: The request is not authorized.  Please verify credentials used
        in the request.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: vop.framework.not.authorized.exception
                  severity: ERROR
                  status: 403
                  text: Access denied.
                  timestamp: 2019-08-29T18:40:22.766Z
    500:
      description: There was an error encountered processing the Request.  Response
            will contain a  "messages" element that will provide further information
            on the error.  Please retry.  If problem persists, please contact support
            with a copy of the Response.
      content:
        application/problem+json:
          schema:
            '$ref': '#/components/schemas/ProviderResponse'
          example:
              messages:
                - key: vop.framework.global.general.exception
                  severity: ERROR
                  status: 500
                  text: Unexpected exception.
                  timestamp: 2019-08-29T18:40:22.766Z
